---
version: "3.9"
services:
  db:
    image: docker.io/library/postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: app_stage
    volumes:
      - db_data_stage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app_stage"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: always

  api:
    image: ghcr.io/gc69720/reseau-api:${API_TAG:-stage}
    env_file: ../env/stage/api.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media_stage:/app/media
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
    restart: always

  web:
    image: ghcr.io/gc69720/reseau-web:${WEB_TAG:-stage}
    env_file: ../env/stage/web.env
    restart: always

  nginx:
    image: docker.io/library/nginx:1.27-alpine
    volumes:
      - ../nginx/stage.conf:/etc/nginx/conf.d/default.conf:ro
      - ../certs/stage/:/etc/nginx/certs/:ro
      - ../conf/nginx/security-headers.conf:/etc/nginx/snippets/security-headers.conf:ro
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - web
      - api
    restart: always

volumes:
  db_data_stage:
  media_stage:
