version: "3.9"
services:
  db:
    image: docker.io/library/postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: app
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: always

  api:
    image: ghcr.io/ORG/reseau-api:${API_TAG}
    env_file: ./env/prod/api.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media:/app/media
      - ./conf/api/uwsgi.ini:/etc/uwsgi/uwsgi.ini:ro
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2g
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
    restart: always

  web:
    image: ghcr.io/ORG/reseau-web:${WEB_TAG}
    env_file: ./env/prod/web.env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512m
    restart: always

  nginx:
    image: docker.io/library/nginx:1.27-alpine
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs/prod/:/etc/nginx/certs/:ro
      - ./conf/nginx/security-headers.conf:/etc/nginx/snippets/security-headers.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - api
    restart: always

volumes:
  db_data:
  media:
