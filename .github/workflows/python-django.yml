---
name: python-django

on:
  workflow_call:
    inputs:
      python_version:
        type: string
        required: false
        default: "3.12"
      working_directory:
        type: string
        required: false
        default: "."
      django_settings_module:
        type: string
        required: false
        default: "app.settings"
      run_tests:
        type: boolean
        required: false
        default: true
      upload_test_artifacts:
        type: boolean
        required: false
        default: true
      # DB service (toujours disponible ; utilisez ou ignorez via env)
      postgres_image:
        type: string
        required: false
        default: "postgres:16"
      postgres_user:
        type: string
        required: false
        default: "app"
      postgres_password:
        type: string
        required: false
        default: "app"
      postgres_db:
        type: string
        required: false
        default: "appdb"

jobs:
  django:
    name: python-django
    runs-on: ubuntu-latest

    # Service Postgres (exposé en 5432)
    services:
      postgres:
        image: ${{ inputs.postgres_image }}
        ports: [ "5432:5432" ]
        env:
          POSTGRES_USER: ${{ inputs.postgres_user }}
          POSTGRES_PASSWORD: ${{ inputs.postgres_password }}
          POSTGRES_DB: ${{ inputs.postgres_db }}
        options: >-
          --health-cmd="pg_isready -U ${{ inputs.postgres_user }} -d ${{ inputs.postgres_db }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    permissions:
      contents: read

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    env:
      DJANGO_SETTINGS_MODULE: ${{ inputs.django_settings_module }}
      # URL DB utilisable côté tests (si vous n'en avez pas besoin, ignorez-la)
      DATABASE_URL: postgres://${{ inputs.postgres_user }}:${{ inputs.postgres_password }}@localhost:5432/${{ inputs.postgres_db }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint (ruff/flake8 si présent)
        run: |
          if command -v ruff >/dev/null 2>&1; then ruff --version && ruff check .; fi
          if command -v flake8 >/dev/null 2>&1; then flake8 .; fi

      - name: Unit tests
        if: ${{ inputs.run_tests }}
        run: |
          python -c "import os; print('DJANGO_SETTINGS_MODULE=', os.getenv('DJANGO_SETTINGS_MODULE'))"
          if [ -f manage.py ]; then python manage.py test -v 2; else python -m pytest -q || true; fi

      - name: Upload test reports
        if: ${{ inputs.upload_test_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            **/test-results/**/*.xml
            **/coverage*.xml
            **/.pytest_cache
          if-no-files-found: ignore
