name: python-django

on:
  workflow_call:
    inputs:
      python_version: { type: string, default: "3.12" }
      working_directory: { type: string, default: "." }
      django_settings_module: { type: string, default: "app.settings" }
      run_tests: { type: boolean, default: true }
      upload_test_artifacts: { type: boolean, default: true }
      enable_codeql: { type: boolean, default: true }
    secrets: {}

jobs:
  app:
    name: Django CI
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: appdb
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U app -d appdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      DATABASE_URL: postgres://app:app@localhost:5432/appdb
      DJANGO_SETTINGS_MODULE: ${{ inputs.django_settings_module }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(format('{0}/{1}', inputs.working_directory, 'requirements*.txt')) }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        working-directory: ${{ inputs.working_directory }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Django checks & migrate
        working-directory: ${{ inputs.working_directory }}
        run: |
          if [ -f manage.py ]; then python manage.py check; fi
          if [ -f manage.py ]; then python manage.py migrate --noinput || true; fi

      - name: Run tests
        if: ${{ inputs.run_tests }}
        working-directory: ${{ inputs.working_directory }}
        run: |
          if [ -f manage.py ]; then python manage.py test -v 2; else echo "No manage.py, skipping."; fi

      - name: Upload test reports
        if: ${{ inputs.upload_test_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            **/junit*.xml
            **/coverage*.xml
          if-no-files-found: ignore

      - name: Initialize CodeQL
        if: ${{ inputs.enable_codeql }}
        uses: github/codeql-action/init@v4
        with:
          languages: python

      - name: Analyze (CodeQL)
        if: ${{ inputs.enable_codeql }}
        uses: github/codeql-action/analyze@v4
