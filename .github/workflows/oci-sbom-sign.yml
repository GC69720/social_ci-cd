name: oci-sbom-sign (reusable)
on:
  workflow_call:
    inputs:
      image:
        type: string
        required: true
      generate_spdx:
        type: boolean
        required: false
        default: true
      sign_image:
        type: boolean
        required: false
        default: true
    secrets:
      COSIGN_PRIVATE_KEY:
        required: false
      COSIGN_PASSWORD:
        required: false

jobs:
  sbom:
    name: Generate SBOM (Syft) + optional sign
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Generate SBOM (SPDX) from image
        if: ${{ inputs.generate_spdx }}
        uses: anchore/sbom-action@v0
        with:
          image: ${{ inputs.image }}
          artifact-name: sbom-spdx
          format: spdx-json

      - name: Install Cosign
        if: ${{ inputs.sign_image }}
        uses: sigstore/cosign-installer@v3

      - name: Sign image (cosign keyless or key-based)
        if: ${{ inputs.sign_image }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          if [ -n "${{ secrets.COSIGN_PRIVATE_KEY }}" ]; then
            echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
            COSIGN_PASSWORD="${{ secrets.COSIGN_PASSWORD }}" cosign sign --key cosign.key "${{ inputs.image }}"
          else
            cosign sign "${{ inputs.image }}"
          fi
