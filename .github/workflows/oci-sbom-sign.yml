name: oci-sbom-sign

on:
  workflow_call:
    inputs:
      image:
        description: "Image (ex: ghcr.io/org/app:tag)"
        type: string
        required: true
      generate_spdx:
        description: "Générer SBOM SPDX via Syft"
        type: boolean
        default: true
      sign_image:
        description: "Signer l'image avec Cosign (keyless OIDC)"
        type: boolean
        default: true
    secrets: {}

permissions:
  contents: write    # <- requis pour l’upload d’artefacts par sbom-action
  id-token: write    # <- requis pour cosign keyless
  packages: write    # <- push/refs (signatures) vers GHCR

jobs:
  sbom-sign:
    name: SBOM + Sign
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (meta only)
        uses: actions/checkout@v4

      # Login GHCR (permet à sbom-action de tirer une image privée si besoin)
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Remplacement de anchore/syft-action -> anchore/sbom-action
      - name: Generate SBOM (Syft via sbom-action)
        if: ${{ inputs.generate_spdx }}
        uses: anchore/sbom-action@v0
        with:
          image: ${{ inputs.image }}         # scanne l'image construite
          format: spdx-json
          artifact-name: sbom.spdx.json      # nom d’artefact stable

      - name: Install Cosign
        if: ${{ inputs.sign_image }}
        uses: sigstore/cosign-installer@v3.7.0

      - name: Sign image (keyless OIDC)
        if: ${{ inputs.sign_image }}
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign --yes ${{ inputs.image }}

      - name: Verify signature
        if: ${{ inputs.sign_image }}
        run: |
          cosign verify ${{ inputs.image }} | head -n 50 || exit 1
